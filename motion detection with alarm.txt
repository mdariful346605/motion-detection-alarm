300 motion hole alarm

import cv2
import sys
try:
    import winsound
    def beep():
        winsound.Beep(1000, 500)
except:
    def beep():
        sys.stdout.write('\a')
        sys.stdout.flush()
cap = cv2.VideoCapture(0)
ret, frame1 = cap.read()
ret, frame2 = cap.read()
motion_count = 0 
alarm_triggered = False

while cap.isOpened():
    diff = cv2.absdiff(frame1, frame2)
    gray = cv2.cvtColor(diff, cv2.COLOR_BGR2GRAY)
    blur = cv2.GaussianBlur(gray, (4,5), 0)
    thresh = cv2.threshold(blur, 25, 250, cv2.THRESH_BINARY)[1]
    dilated = cv2.dilate(thresh, None, iterations=3)
    contours, _ = cv2.findContours(dilated, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    movement_detected = False
    for contour in contours:
        if cv2.contourArea(contour) < 550:
            continue
        movement_detected = True
        x, y, w, h = cv2.boundingRect(contour)
        cv2.rectangle(frame1, (x,y), (x+w, y+h), (0,250,0), 3)
        cv2.putText(frame1, "Movement", (x, y-10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0,250,0), 2) 
    if movement_detected:
        motion_count += 1
    cv2.putText(frame1, f"Motion Count: {motion_count}", (10,30),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (255,0,0), 2)
    if motion_count >= 500:
        cv2.putText(frame1, "motion over", (50,80),
                    cv2.FONT_HERSHEY_SIMPLEX, 1, (0,0,255), 3)
        if not alarm_triggered:
            beep()
            alarm_triggered = True
    cv2.imshow("feed", frame1)
    frame1 = frame2
    ret, frame2 = cap.read()
    if not ret:
        break
    if cv2.waitKey(1) & 0xFF == ord('e'):
        break
cap.release()
cv2.destroyAllWindows()
